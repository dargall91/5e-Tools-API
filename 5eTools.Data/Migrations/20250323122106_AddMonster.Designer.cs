// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _5eTools.Data;

#nullable disable

namespace _5eTools.Data.Migrations
{
    [DbContext(typeof(ToolsDbContext))]
    [Migration("20250323122106_AddMonster")]
    partial class AddMonster
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("_5eTools.Data.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("UsesInflatedHitPoints")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UsesStress")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.ChallengeRating", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CR")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChallengeRating");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Charisma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Charisma");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Constitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Constitution");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Dexterity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dexterity");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Intelligence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Intelligence");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.LegendaryAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("LegendaryAction");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("BonusInitiative")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("ChallengeRatingId")
                        .HasColumnType("int");

                    b.Property<int>("CharismaId")
                        .HasColumnType("int");

                    b.Property<int>("ConstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("DexterityId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("IntelligenceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LegendaryActionCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StrengthId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WisdomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ChallengeRatingId");

                    b.HasIndex("CharismaId")
                        .IsUnique();

                    b.HasIndex("ConstitutionId")
                        .IsUnique();

                    b.HasIndex("DexterityId")
                        .IsUnique();

                    b.HasIndex("IntelligenceId")
                        .IsUnique();

                    b.HasIndex("StrengthId")
                        .IsUnique();

                    b.HasIndex("WisdomId")
                        .IsUnique();

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterAbility");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterAction");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Strength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Strength");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CanHostCampaigns")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Deactivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Wisdom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wisdom");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.LegendaryAction", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("LegendaryActions")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.ChallengeRating", "ChallengeRating")
                        .WithMany()
                        .HasForeignKey("ChallengeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Charisma", "Charisma")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "CharismaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Constitution", "Constitution")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "ConstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Dexterity", "Dexterity")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "DexterityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Intelligence", "Intelligence")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "IntelligenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Strength", "Strength")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "StrengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Wisdom", "Wisdom")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "WisdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("ChallengeRating");

                    b.Navigation("Charisma");

                    b.Navigation("Constitution");

                    b.Navigation("Dexterity");

                    b.Navigation("Intelligence");

                    b.Navigation("Strength");

                    b.Navigation("Wisdom");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAbility", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("Abilities")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAction", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("Actions")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Actions");

                    b.Navigation("LegendaryActions");
                });
#pragma warning restore 612, 618
        }
    }
}
