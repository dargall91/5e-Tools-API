// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _5eTools.Data;

#nullable disable

namespace _5eTools.Data.Migrations
{
    [DbContext(typeof(ToolsDbContext))]
    [Migration("20250516214358_AddInventoryItems")]
    partial class AddInventoryItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CampaignSubclass", b =>
                {
                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("SubclassId")
                        .HasColumnType("int");

                    b.HasKey("CampaignId", "SubclassId");

                    b.HasIndex("SubclassId");

                    b.ToTable("CampaignSubclass");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AllowsMulticlassing")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsFinished")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("UsesInflatedHitPoints")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("UsesStress")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.CasterType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CasterType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.ChallengeRating", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CR")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasAnnotation("Relational:JsonPropertyName", "cr");

                    b.Property<int>("ProficiencyBonus")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "xp");

                    b.HasKey("Id");

                    b.ToTable("ChallengeRating");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.CharacterClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("BaseClass")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("BaseClassSaveDc")
                        .HasColumnType("int");

                    b.Property<int>("HitDiceUsed")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.Property<int?>("PrimalCompanionId")
                        .HasColumnType("int");

                    b.Property<int>("SubclassId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerCharacterId");

                    b.HasIndex("PrimalCompanionId")
                        .IsUnique();

                    b.HasIndex("SubclassId");

                    b.ToTable("CharacterClass");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Charisma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Deception")
                        .HasColumnType("int");

                    b.Property<int>("Intimidation")
                        .HasColumnType("int");

                    b.Property<int>("Performance")
                        .HasColumnType("int");

                    b.Property<int>("Persuasion")
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Charisma");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AverageHitDieRoll")
                        .HasColumnType("int");

                    b.Property<int>("CasterTypeId")
                        .HasColumnType("int");

                    b.Property<string>("ClassAbilityScore")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HitDieSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CasterTypeId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Constitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Constitution");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Copper")
                        .HasColumnType("int");

                    b.Property<int>("Electrum")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int>("Platinum")
                        .HasColumnType("int");

                    b.Property<int>("Silver")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Dexterity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Acrobatics")
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("SleightOfHand")
                        .HasColumnType("int");

                    b.Property<int>("Stealth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dexterity");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Encounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<bool>("HasLairAction")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MusicId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("MusicId");

                    b.ToTable("Encounter");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.EncounterMonster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EncounterId")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeRoll")
                        .HasColumnType("int");

                    b.Property<bool>("IsInvisible")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsMinion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsReinforcement")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncounterId");

                    b.HasIndex("MonsterId");

                    b.ToTable("EncounterMonster");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.EncounterXpThreshold", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Budget")
                        .HasColumnType("int");

                    b.Property<int>("Deadly")
                        .HasColumnType("int");

                    b.Property<int>("Easy")
                        .HasColumnType("int");

                    b.Property<int>("Hard")
                        .HasColumnType("int");

                    b.Property<int>("Medium")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EncounterXpThreshold");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.ExhaustionLevel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ExhaustionLevel");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Intelligence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Arcana")
                        .HasColumnType("int");

                    b.Property<int>("History")
                        .HasColumnType("int");

                    b.Property<int>("Investigation")
                        .HasColumnType("int");

                    b.Property<int>("Nature")
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Religion")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Intelligence");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.InventoryItem", b =>
                {
                    b.Property<int>("PlayerCharacterId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PlayerCharacterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("InventoryItem");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.LegendaryAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("LegendaryAction");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Alignment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("BonusInitiative")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("ChallengeRatingId")
                        .HasColumnType("int");

                    b.Property<int>("CharismaId")
                        .HasColumnType("int");

                    b.Property<int>("ConstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("DexterityId")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("IntelligenceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LegendaryActionCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senses")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("StrengthId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WisdomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ChallengeRatingId");

                    b.HasIndex("CharismaId")
                        .IsUnique();

                    b.HasIndex("ConstitutionId")
                        .IsUnique();

                    b.HasIndex("DexterityId")
                        .IsUnique();

                    b.HasIndex("IntelligenceId")
                        .IsUnique();

                    b.HasIndex("StrengthId")
                        .IsUnique();

                    b.HasIndex("WisdomId")
                        .IsUnique();

                    b.ToTable("Monster");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAbility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterAbility");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterAction");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Music", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("LoopEndTime")
                        .HasColumnType("float");

                    b.Property<float>("LoopStartTime")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Music");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PlayerCharacter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArmorClassBonus")
                        .HasColumnType("int");

                    b.Property<int>("BaseArmorClass")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CharismaId")
                        .HasColumnType("int");

                    b.Property<int>("ConstitutionId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("DeathSaveFailures")
                        .HasColumnType("int");

                    b.Property<int>("DeathSaveSuccesses")
                        .HasColumnType("int");

                    b.Property<int>("DexterityId")
                        .HasColumnType("int");

                    b.Property<bool>("DwarvenToughness")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ExhaustionLevelId")
                        .HasColumnType("int");

                    b.Property<int>("HitPointMaximum")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeBonus")
                        .HasColumnType("int");

                    b.Property<int>("InitiativeRoll")
                        .HasColumnType("int");

                    b.Property<int>("IntelligenceId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCombatant")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsDead")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxHitPointReduction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ProficiencyBonusId")
                        .HasColumnType("int");

                    b.Property<int?>("ResolveId")
                        .HasColumnType("int");

                    b.Property<int?>("SpellSlotsId")
                        .HasColumnType("int");

                    b.Property<int>("StrengthId")
                        .HasColumnType("int");

                    b.Property<int?>("StressId")
                        .HasColumnType("int");

                    b.Property<int>("TemporaryHitPoints")
                        .HasColumnType("int");

                    b.Property<bool>("ToughFeat")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("UsedSpellSlotsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WarlockSpellSlotsId")
                        .HasColumnType("int");

                    b.Property<int>("WisdomId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CharismaId")
                        .IsUnique();

                    b.HasIndex("ConstitutionId")
                        .IsUnique();

                    b.HasIndex("CurrencyId")
                        .IsUnique();

                    b.HasIndex("DexterityId")
                        .IsUnique();

                    b.HasIndex("ExhaustionLevelId");

                    b.HasIndex("IntelligenceId")
                        .IsUnique();

                    b.HasIndex("ProficiencyBonusId");

                    b.HasIndex("ResolveId")
                        .IsUnique();

                    b.HasIndex("SpellSlotsId");

                    b.HasIndex("StrengthId")
                        .IsUnique();

                    b.HasIndex("StressId")
                        .IsUnique();

                    b.HasIndex("UsedSpellSlotsId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("WarlockSpellSlotsId");

                    b.HasIndex("WisdomId")
                        .IsUnique();

                    b.ToTable("PlayerCharacter");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PrimalCompanion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArmorClassBonus")
                        .HasColumnType("int");

                    b.Property<int?>("CharismaOverride")
                        .HasColumnType("int");

                    b.Property<int?>("ConstitutionOverride")
                        .HasColumnType("int");

                    b.Property<int>("Damage")
                        .HasColumnType("int");

                    b.Property<int>("DeathSaveFailures")
                        .HasColumnType("int");

                    b.Property<int>("DeathSaveSuccesses")
                        .HasColumnType("int");

                    b.Property<int?>("DexterityOverride")
                        .HasColumnType("int");

                    b.Property<int>("HitDiceUsed")
                        .HasColumnType("int");

                    b.Property<int>("HitPointMaximum")
                        .HasColumnType("int");

                    b.Property<int?>("IntelligenceOverride")
                        .HasColumnType("int");

                    b.Property<int>("MaxHitPointReduction")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PrimalCompanionTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("StrengthOverride")
                        .HasColumnType("int");

                    b.Property<int>("TemporaryHitPoints")
                        .HasColumnType("int");

                    b.Property<int?>("WisdomOverride")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PrimalCompanionTypeId");

                    b.ToTable("PrimalCompanion");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PrimalCompanionType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AbilityDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AbilityName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ActionDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Charisma")
                        .HasColumnType("int");

                    b.Property<int>("Constitution")
                        .HasColumnType("int");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("HitDieSize")
                        .HasColumnType("int");

                    b.Property<int>("HitPointMultiplier")
                        .HasColumnType("int");

                    b.Property<int>("Intelligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Speed")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("Wisdom")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PrimalCompanionType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.ProficiencyBonus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Bonus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProficiencyBonus");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Resolve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Resolve");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.SpellSlots", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("EigthLevel")
                        .HasColumnType("int");

                    b.Property<int>("FifthLevel")
                        .HasColumnType("int");

                    b.Property<int>("FirstLevel")
                        .HasColumnType("int");

                    b.Property<int>("FourthLevel")
                        .HasColumnType("int");

                    b.Property<int>("NinthLevel")
                        .HasColumnType("int");

                    b.Property<int>("SecondLevel")
                        .HasColumnType("int");

                    b.Property<int>("SeventhLevel")
                        .HasColumnType("int");

                    b.Property<int>("SixthLevel")
                        .HasColumnType("int");

                    b.Property<int>("ThirdLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpellSlots");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Strength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Athletics")
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Strength");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Stress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MeditationDiceUsed")
                        .HasColumnType("int");

                    b.Property<int>("StressLevel")
                        .HasColumnType("int");

                    b.Property<int>("StressMaximum")
                        .HasColumnType("int");

                    b.Property<int?>("StressStatusId")
                        .HasColumnType("int");

                    b.Property<int>("StressThreshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StressStatusId");

                    b.ToTable("Stress");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.StressStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Roll")
                        .HasColumnType("int");

                    b.Property<int>("StressTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StressTypeId");

                    b.ToTable("StressStatus");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.StressType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("MaximumRoll")
                        .HasColumnType("int");

                    b.Property<int>("MinimumRoll")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("StressType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Subclass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("PrimalCompanion")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ThirdCaster")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.ToTable("Subclass");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.UsedSpellSlots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EigthLevel")
                        .HasColumnType("int");

                    b.Property<int>("FifthLevel")
                        .HasColumnType("int");

                    b.Property<int>("FirstLevel")
                        .HasColumnType("int");

                    b.Property<int>("FourthLevel")
                        .HasColumnType("int");

                    b.Property<int>("NinthLevel")
                        .HasColumnType("int");

                    b.Property<int>("SecondLevel")
                        .HasColumnType("int");

                    b.Property<int>("SeventhLevel")
                        .HasColumnType("int");

                    b.Property<int>("SixthLevel")
                        .HasColumnType("int");

                    b.Property<int>("ThirdLevel")
                        .HasColumnType("int");

                    b.Property<int>("Warlock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UsedSpellSlots");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("CanHostCampaigns")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Deactivated")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.WarlockSpellSlots", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Slots")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WarlockSpellSlots");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Wisdom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnimalHandling")
                        .HasColumnType("int");

                    b.Property<int>("Insight")
                        .HasColumnType("int");

                    b.Property<int>("Medicine")
                        .HasColumnType("int");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<bool>("Proficient")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("Survival")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Wisdom");
                });

            modelBuilder.Entity("CampaignSubclass", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Campaign", null)
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Subclass", null)
                        .WithMany()
                        .HasForeignKey("SubclassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Campaign", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.User", "CampaignOwner")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CampaignOwner");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.CharacterClass", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.PlayerCharacter", null)
                        .WithMany("CharacterClasses")
                        .HasForeignKey("PlayerCharacterId");

                    b.HasOne("_5eTools.Data.Entities.PrimalCompanion", "PrimalCompanion")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.CharacterClass", "PrimalCompanionId");

                    b.HasOne("_5eTools.Data.Entities.Subclass", "Subclass")
                        .WithMany()
                        .HasForeignKey("SubclassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimalCompanion");

                    b.Navigation("Subclass");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Class", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.CasterType", "CasterType")
                        .WithMany()
                        .HasForeignKey("CasterTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CasterType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Encounter", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Music", "Music")
                        .WithMany()
                        .HasForeignKey("MusicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Music");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.EncounterMonster", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Encounter", "Encounter")
                        .WithMany("EncounterMonsters")
                        .HasForeignKey("EncounterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Monster", "Monster")
                        .WithMany()
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encounter");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.InventoryItem", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.PlayerCharacter", "PlayerCharacter")
                        .WithMany("InventoryItems")
                        .HasForeignKey("PlayerCharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PlayerCharacter");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.LegendaryAction", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("LegendaryActions")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.ChallengeRating", "ChallengeRating")
                        .WithMany()
                        .HasForeignKey("ChallengeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Charisma", "Charisma")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "CharismaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Constitution", "Constitution")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "ConstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Dexterity", "Dexterity")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "DexterityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Intelligence", "Intelligence")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "IntelligenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Strength", "Strength")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "StrengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Wisdom", "Wisdom")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.Monster", "WisdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("ChallengeRating");

                    b.Navigation("Charisma");

                    b.Navigation("Constitution");

                    b.Navigation("Dexterity");

                    b.Navigation("Intelligence");

                    b.Navigation("Strength");

                    b.Navigation("Wisdom");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAbility", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("Abilities")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.MonsterAction", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Monster", null)
                        .WithMany("Actions")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PlayerCharacter", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Charisma", "Charisma")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "CharismaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Constitution", "Constitution")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "ConstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Currency", "Currency")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Dexterity", "Dexterity")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "DexterityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.ExhaustionLevel", "ExhaustionLevel")
                        .WithMany()
                        .HasForeignKey("ExhaustionLevelId");

                    b.HasOne("_5eTools.Data.Entities.Intelligence", "Intelligence")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "IntelligenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.ProficiencyBonus", "ProficiencyBonus")
                        .WithMany()
                        .HasForeignKey("ProficiencyBonusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Resolve", "Resolve")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "ResolveId");

                    b.HasOne("_5eTools.Data.Entities.SpellSlots", "SpellSlots")
                        .WithMany()
                        .HasForeignKey("SpellSlotsId");

                    b.HasOne("_5eTools.Data.Entities.Strength", "Strength")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "StrengthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.Stress", "Stress")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "StressId");

                    b.HasOne("_5eTools.Data.Entities.UsedSpellSlots", "UsedSpellSlots")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "UsedSpellSlotsId");

                    b.HasOne("_5eTools.Data.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_5eTools.Data.Entities.WarlockSpellSlots", "WarlockSpellSlots")
                        .WithMany()
                        .HasForeignKey("WarlockSpellSlotsId");

                    b.HasOne("_5eTools.Data.Entities.Wisdom", "Wisdom")
                        .WithOne()
                        .HasForeignKey("_5eTools.Data.Entities.PlayerCharacter", "WisdomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Charisma");

                    b.Navigation("Constitution");

                    b.Navigation("Currency");

                    b.Navigation("Dexterity");

                    b.Navigation("ExhaustionLevel");

                    b.Navigation("Intelligence");

                    b.Navigation("ProficiencyBonus");

                    b.Navigation("Resolve");

                    b.Navigation("SpellSlots");

                    b.Navigation("Strength");

                    b.Navigation("Stress");

                    b.Navigation("UsedSpellSlots");

                    b.Navigation("User");

                    b.Navigation("WarlockSpellSlots");

                    b.Navigation("Wisdom");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PrimalCompanion", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.PrimalCompanionType", "PrimalCompanionType")
                        .WithMany()
                        .HasForeignKey("PrimalCompanionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrimalCompanionType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Stress", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.StressStatus", "StressStatus")
                        .WithMany()
                        .HasForeignKey("StressStatusId");

                    b.Navigation("StressStatus");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.StressStatus", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.StressType", "StressType")
                        .WithMany("StressStatuses")
                        .HasForeignKey("StressTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StressType");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Subclass", b =>
                {
                    b.HasOne("_5eTools.Data.Entities.Class", "Class")
                        .WithMany("Subclasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Class", b =>
                {
                    b.Navigation("Subclasses");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Encounter", b =>
                {
                    b.Navigation("EncounterMonsters");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.Monster", b =>
                {
                    b.Navigation("Abilities");

                    b.Navigation("Actions");

                    b.Navigation("LegendaryActions");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.PlayerCharacter", b =>
                {
                    b.Navigation("CharacterClasses");

                    b.Navigation("InventoryItems");
                });

            modelBuilder.Entity("_5eTools.Data.Entities.StressType", b =>
                {
                    b.Navigation("StressStatuses");
                });
#pragma warning restore 612, 618
        }
    }
}
